# You will need to generate your own certs using the command below
# openssl req -newkey rsa:2048 -nodes -keyout docker_configs/conf.d/til.local.key -x509 -days 365 -out docker_configs/conf.d/til.local.crt
# https://www.keycdn.com/support/413-request-entity-too-large
server {
    listen 80;
    server_name platypus.local;
    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/public;
    client_max_body_size 0;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass platypus_web:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
        add_header "Access-Control-Allow-Origin"  *;
    }
}

server {
    listen 443 ssl;
    server_name platypus.local;
    ssl_certificate     /etc/nginx/conf.d/platypus.local.crt;
    ssl_certificate_key /etc/nginx/conf.d/platypus.local.key;
    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/public;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass platypus_web:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
        add_header "Access-Control-Allow-Origin"  *;
    }
}
